plugins {
  id 'idea'
  id 'groovy'
  id 'jacoco'
  id 'project-report'
  id 'ru.vyarus.java-lib' version '1.0.1'
  id 'ru.vyarus.github-info' version '1.0.0'
  id 'ru.vyarus.animalsniffer' version '1.0.0'
  id 'ru.vyarus.quality' version '1.2.0'
  id 'com.github.kt3k.coveralls' version '2.4.0x'
  id 'com.jfrog.bintray' version '1.5'
  id 'net.researchgate.release' version '2.3.4'
  id 'com.github.ben-manes.versions' version '0.11.3'
  id 'net.saliman.cobertura' version '2.3.1'
}

sourceCompatibility = 1.7
targetCompatibility = 1.7

wrapper {
  gradleVersion = 2.10
}

repositories { jcenter(); mavenCentral(); mavenLocal() }


sourceSets {
  integrationTest {
    groovy {
      compileClasspath += main.output
      runtimeClasspath += main.output
      srcDir file('src/integration-test/groovy')
    }
    resources.srcDir file('src/integration-test/resources')
  }
}

configurations {
  integrationTestCompile.extendsFrom testCompile
  integrationTestRuntime.extendsFrom testRuntime
}

dependencies {
  signature 'org.codehaus.mojo.signature:java17:+@signature'

  provided 'com.google.code.findbugs:jsr305:3.0.1'
  provided 'com.google.code.findbugs:annotations:3.0.1'

  compile 'org.slf4j:slf4j-api:1.7.13'
  compile 'com.google.code.gson:gson:2.6.2'
  compile 'com.ning:async-http-client:1.9.38'
  compile 'org.jdeferred:jdeferred-core:1.2.4'

  testCompile 'org.apache.commons:commons-lang3:3.4'
  testCompile 'ch.qos.logback:logback-classic:1.1.3'
  testCompile 'org.slf4j:jul-to-slf4j:1.7.13'
  testCompile 'org.spockframework:spock-core:1.0-groovy-2.4'
  testCompile 'org.jmock:jmock-legacy:2.5.1'

  integrationTestCompile 'com.firebase:firebase-token-generator:2.0.0'
}

group = 'org.jfire'
description = 'Firebase REST API wrapper for Java'

github {
  user = 'j-fischer'
  license = 'Apache-2.0'
}

pom {
  developers {
    developer {
      id "j-fischer"
      name "Johannes Fischer"
      email "jh-fischer@web.de"
    }
  }
}

bintray {
  user = project.hasProperty('bintrayUser') ? bintrayUser : 'USER'
  key = project.hasProperty('bintrayKey') ? bintrayKey : 'KEY'
  publications = ['maven']
  dryRun = false
  publish = true
  pkg {
    repo = 'maven'
    name = project.name
    desc = project.description
    labels = ['firebase', 'rest', 'api', 'wrapper']
    publicDownloadNumbers = true
    licenses = ['Apache-2.0']
    version {
      gpg {
        sign = true
        passphrase = project.hasProperty('gpgPassphrase') ? gpgPassphrase : ''
      }
      mavenCentralSync {
        sync = false
        user = project.hasProperty('sonatypeUser') ? sonatypeUser : 'USER'
        password = project.hasProperty('sonatypePassword') ? sonatypePassword : 'PASSWORD'
      }
    }
  }
}

afterReleaseBuild {
  dependsOn = [bintrayUpload]
  doLast {
    logger.warn "RELEASED $project.group:$project.name:$project.version"
  }
}

afterEvaluate {
  checkstyle {
    ignoreFailures = true
  }

  findbugs {
    ignoreFailures = true
  }

  pmd {
    ignoreFailures = true
  }
}

cobertura {
  coverageFormats = ['html', 'xml']
  coverageIgnoreTrivial = true
  coverageIgnores = ['org.slf4j.Logger.*']
  coverageReportDir = new File("$buildDir/reports/cobertura")
}

test {
  testLogging {
    events "skipped", "failed", "standard_error"
    exceptionFormat "full"
  }
  maxHeapSize = "512m"
}
test.finalizedBy(project.tasks.cobertura)

task integrationTest(type: Test) {
  testClassesDir = sourceSets.integrationTest.output.classesDir
  classpath = sourceSets.integrationTest.runtimeClasspath

  testLogging {
    events "skipped", "failed", "standard_error"
    exceptionFormat "full"
  }

  systemProperties System.properties

  outputs.upToDateWhen { false }
}

tasks.withType(Test) {
  reports.html.destination = file("${reporting.baseDir}/${name}")
}

dependencyUpdates.revision = 'release'
jacocoTestReport.reports.xml.enabled = true

task showDependenciesTree(dependsOn: 'htmlDependencyReport', group: 'help', description:
  'Generates dependencies tree report and opens it in browser') << {
  java.awt.Desktop.getDesktop().open(file('/build/reports/project/dependencies/root.html'))
}
